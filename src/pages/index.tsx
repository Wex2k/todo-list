import Head from "next/head";
import Link from "next/link";
import { FormEvent, useState } from "react";
import TodoList from "~/components/TodoList";

export interface ITodo {
  content: String;
  id: number;
  complete: boolean;
}

export type TodoListType = {
  todos: ITodo[];
  handleDelete: (id: number) => void;
  handleEdit: (id: number) => void;
};

export default function Home({ content, id, complete }: ITodo) {
  const [todos, setTodos] = useState<ITodo[]>([]);
  const [value, setValue] = useState("");

  const handleDelete = (id: number) => {
    const filteredTodos = todos.filter((todo) => todo.id !== id);
    setTodos([...filteredTodos]);
  };

  const handleEdit = (id: number) => {
    if (value !== "") {
      const updatedTodos = todos.map((todo) => {
        if (todo.id === id) {
          return { ...todo, content: value };
        }
        return todo;
      });
      setTodos(updatedTodos);
      setValue("");
    }
  };

  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (value !== "") {
      setTodos([
        ...todos,
        {
          content: value,
          id: Date.now(),
          complete: false,
        },
      ]);
      setValue("");
    }
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    e.preventDefault();
    setValue(e.currentTarget.value);
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen w-full flex-col scroll-smooth bg-gradient-to-b from-[#2e026d] to-[#15162c] font-sans">
        <Link href={"/"}>
          <h1 className="mb-7 flex cursor-pointer justify-center text-5xl font-extrabold uppercase tracking-tight text-white sm:text-[5rem]">
            Todos
          </h1>
        </Link>
        <form
          className="mb-10 flex justify-center gap-3"
          onSubmit={(e) => handleSubmit(e)}
        >
          <button
            className="rounded-md bg-purple-400 p-3 uppercase text-white drop-shadow-2xl transition duration-300 hover:bg-purple-600"
            onClick={() => handleSubmit}
          >
            Add todo
          </button>
          <input
            type="text"
            name="content"
            placeholder="Enter todo text"
            className="h-auto w-80 rounded-sm border-2 border-purple-400 bg-transparent text-white outline-none drop-shadow-2xl placeholder:text-white"
            value={value}
            onChange={(e) => handleChange(e)}
          />
        </form>
        <div className="flex justify-center">
          <TodoList
            todos={todos}
            handleDelete={handleDelete}
            handleEdit={handleEdit}
          />
        </div>
      </main>
    </>
  );
}
